@using AttendanceCRM.Models
@model CourseViewModel
@{
    ViewData["Title"] = "Courses";
    var role = User.Claims.First(x => x.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role").Value;
}

<div class="container-fluid">
    <div class="title row align-items-center justify-content-between">
        <div class="col-auto col-sm text-truncate pr-0">
            <h1 class="text-truncate">Courses</h1>
        </div>
        <div class="col-auto display-flex">
            <form id="SearchCriteria" action="javascript:void(0)" default-button="btnSearch">
                <div class="one-col default-form clearfix mt-2">
                    <div class="form-group">
                        <div class="input-group">
                            @Html.TextBox("Search", "", new { @class = "form-control", placeholder = "Search by Name/Detail", maxlength = "100", autocomplete = "off" })
                            <div class="input-group-append">
                                <button id="btnSearch" type="button" class="input-group-text btn btn-primary" onclick="BindTable()"><img src="@Url.Content("~/Images/icon-search.svg")" alt=""></button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            @if (role != "Student")
            {
                <div class="btn-list ml-10">
                    <a href="@Url.Action("managecourse", "course")" type="button" class="btn btn-icon btn-primary mt-2 ml-2">
                        <img class="icon" src="~/images/add.svg" alt="">
                        <span>Create Course</span>
                    </a>
                </div>
            }
        </div>
    </div>
    <div class="card-outer p-0">
        <div id="divCourses" class="grid-block">
            <table id="tblCourses" class="table"></table>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        BindTable();
        $('#SearchCriteria').on('keypress', function (e) {
            if (e.keyCode === 13) {
                e.preventDefault();
                BindTable();
            }
        });
    });

    function BindTable() {

        if ($.fn.DataTable.isDataTable("#tblCourses")) {
            $('#tblCourses').dataTable().fnDestroy();
            $('#divCourses').html('<table id="tblCourses" class="table"></table>');
        }

        $('#tblCourses').DataTable({
            "lengthChange": true,
            "pageLength": 10,
            "processing": true,
            "serverSide": false,
            "orderMulti": false,
            "paging": true,
            'searching': false,
            'ordering': true,
            'autoWidth': false,
            'dom': '<"table-responsive"t><"grid-footer clearfix"<"left-part"<"page-length"l>i>p>',
            "language": {
                "lengthMenu": "_MENU_",
                "emptyTable": "No data available",
                paginate: {
                    next: '<img src="@Url.Content("~/Images/icon-next.svg")" alt="">', // or '→'
                    previous: '<img src="@Url.Content("~/Images/icon-prev.svg")" alt="">' // or '←'
                },
                "info": "Records per page from <span class=\"badge badge-pill badge-dark\"> _TOTAL_ </span>",
            },
            "ajax": {
                url: '@Url.Action("course", "course")',
                type: "POST",
                data: bindSearch()
            },
            "columns": [
                { "title": "Checkin Code", "data": "CourseCode", width: "10%", "visible": "@role" != "Student" ? true : false },
                { "title": "Name", "data": "Name", width: "20%" },
                { "title": "Year", "data": "CourseYear.Name", width: "10%" },
                { "title": "Semester", "data": "CourseSemester.Name", width: "20%" },
                { "title": "Subject", "data": "CourseSubject.Name", width: "20%" },
                {
                    "title": "Active",
                    "data": "Active",
                    "width": "10%",
                    "class": "text-center",
                    "render": function (data, type, row) {
                        var appendstring = '';
                        if (data === true)
                            appendstring += '<i title="Active" class="glyphicon glyphicon-ok-circle active"></i>'
                        else
                            appendstring += '<i title="InActive" class="glyphicon glyphicon-remove-circle inactive"></i>'
                        return appendstring;
                    }
                },
                {
                    "title": "Action",
                    "data": null,
                    "class": "text-center",
                    "visible": "@role" != "Student" ? true : false,
                    "render": function (data, type, row) {
                        var appendstring = '';
                        if ("@role" != "Student") {
                            appendstring += '<a href="@Url.Action("managecourse", "course")?data=' + row["EncryptedId"] + '"  class="action-btn"  title="Edit"><img src="@Url.Content("~/Images/icon-edit.svg")" alt=""></a>'
                            appendstring += '<a href="javascript:void(0)" class="action-btn delete" data-id="' + row["EncryptedId"] + '" data-title="@Html.Raw("Delete Course")" data-message="@Html.Raw("Are you sure you want to delete this course?")" title="Delete"><img src="@Url.Content("~/Images/icon-delete.svg")" alt=""></a>'
                            appendstring += '<a onclick="GenerateCourseCode(\'' + row["EncryptedId"] + '\')" class="action-btn block" title="CheckIn"><img src="@Url.Content("~/Images/icon-refresh-b.svg")" alt=""></a>'
                        }
                        return appendstring;
                    },
                    "orderable": false,
                    "width": "10%"
                }

            ],
            "drawCallback": function (settings, json) {
                InitDeleteConfirmation();
                PrepareGridBottom("divCourses");
            },
            "lengthMenu": [[10, 20, 50, 100], [10, 20, 50, 100]]
        });
    }

    function bindSearch() {
        var param = {};
        param["searchText"] = $('#Search').val();
        return param;
    }

    function DeleteCallback(event) {
        if (event !== undefined) {
            if (event.target !== undefined) {
                var atag = event.target;
                if (event.target.tagName === "IMG") {
                    atag = $(event.target).parent();
                }
                $.ajax({
                    type: "POST",
                    url: encodeURI('@Url.Action("deletecourse", "course")'),
                    data: { "id": $(atag).attr('data-id') },
                    cache: false,
                    dataType: 'json',
                    success: function (data, textStatus, XMLHttpRequest) {
                        if (data.success) {
                            BindTable();
                            successMessage(data.message);
                        }
                        else {
                            errorMessage(data.message);
                        }
                    },
                    error: function (jqXHR, exception, errMsg) {
                        errorMessage("Something went wrong.");
                    }
                });
            }
        }
    }

    function GenerateCourseCode(data) {
        if (data !== undefined || data != "") {
            $.ajax({
                type: "POST",
                url: "@Url.Action("generatecoursecode", "course")",
                data: { "data": data },
                cache: false,
                dataType: 'json',
                success: function (data, textStatus, XMLHttpRequest) {
                    if (data.success) {
                        BindTable();
                        successMessage(data.message);
                    }
                    else {
                        errorMessage(data.message);
                    }
                },
                error: function (jqXHR, exception, errMsg) {
                errorMessage("Something went wrong.");
                }
            });
        }
    }
</script>